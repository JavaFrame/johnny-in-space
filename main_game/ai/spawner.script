go.property("difficulty", 1)

function init(self)
	self.disable = false
	self.next_spawned = 0

	self.min_time = 2.0
	self.max_time = 4.0

	self.min_spawned = 1
	self.max_spawned = 1
end

function update(self, dt)
	if socket.gettime() > self.next_spawned and not self.disable then	
		update_min_max_times(self, self.difficulty)
		local amount_of_enemies = math.random(self.min_spawned, self.max_spawned)
		for i = 1, amount_of_enemies do
			factory.create("#basic_ai", get_random_position(), nil, {}, 2)
			self.next_spawned = get_next_time(self)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("disable") then
		self.disable = true
	elseif message_id == hash("difficulty") then
		self.difficulty = message.difficulty
	end
end

function update_min_max_times(self, difficulty) 
	function set(min_time, max_time, min_spawned, max_spawned)
		self.min_time = min_time
		self.max_time = max_time
		self.min_spawned = min_spawned
		self.max_spawned = max_spawned
	end
	if difficulty <= 1 then
		set(2.0, 4.0, 1, 1)
	elseif difficulty <= 2 then
		set(1.0, 4.0, 1, 1)
	elseif difficulty <= 3 then
		set(1.0, 4.0, 1, 3)
	elseif difficulty <= 3 then
		set(1.0, 2.0, 1, 4)
	elseif difficulty <= 4 then
		set(1.0, 2.0, 2, 6)
	elseif difficulty <= 5 then
		set(0.5, 1.0, 4, 6)
	end
end

function get_random_position() 
	local width, height = window.get_size()
	local x = math.random(0, width)
	return vmath.vector3(x, height, 0)
end

function get_next_time(self) 
	return socket.gettime() + math.random(self.min_time, self.max_time) / self.difficulty
end
